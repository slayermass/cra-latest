{"version":3,"sources":["webWorkers/WebWorker.js","webWorkers/testWorker.js","components/webworkers/Webworkers.js","helpers/validator/formValidator.js","components/MaterialUI/FormComponent.js","components/App/App.js","index.js"],"names":["WebWorker","workerUrl","Object","classCallCheck","this","code","toString","blob","Blob","concat","worker","Worker","URL","createObjectURL","addEventListener","onError","e","console","log","lineno","filename","message","testWorker","self","data","cmd","res","a","performance","now","i","postMessage","Error","testWebWorker","setWorkerData","Webworkers","useRef","myworker","_useState","useState","_useState2","slicedToArray","useEffect","current","event","useCallback","react_default","createElement","Fragment","onClick","toState","structure","entries","reduce","_ref","_ref2","key","value","validate","state","errors","keys","s","forEach","_ref3","_ref4","name","pushErrors","push","type","Number","maxValue","minValue","numberValidator","String","trimmedValue","trim","maxLength","length","minLength","stringValidator","test","toLowerCase","emailValidator","checkHasError","attr","areErrors","values","v","PureComponent","React","lazy","__webpack_require__","then","bind","ReactDOM","render","_useState3","_useState4","className","Webworkers_Webworkers","document","getElementById"],"mappings":"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","file":"static/js/main.b4c37425.chunk.js","sourcesContent":["// класс обертка для веб воркеров в react\nexport default class WebWorker {\n  constructor(workerUrl) {\n    const code = workerUrl.toString();\n    const blob = new Blob([`(${code})()`]);\n    const worker = new Worker(URL.createObjectURL(blob));\n    worker.addEventListener('error', this.onError, false);\n    return worker;\n  }\n  \n  onError(e) {\n    console.log('Line: ' + e.lineno);\n    console.log('In: ' + e.filename);\n    console.log('Message: ' + e.message);\n  }\n}\n","export default () => {\n  // дождаться запроса\n  self.addEventListener('message', (e) => { // eslint-disable-line no-restricted-globals\n    if (!e) return;\n\n    switch (e.data.cmd) {\n      case 'test':\n        const a = performance.now();\n        console.log('webworker started');\n        let res;\n        for (let i = 0; i < 20000000; i++) {\n          res += 1;\n          res += res % 2;\n        }\n        console.log('webworker ended: ', (performance.now() - a) / 1000);\n        break;\n\n      case 'error':\n        postMessage({ data: 'response before error' });\n        throw new Error('EEERROROOR');\n\n      case 'onload':\n        postMessage('onload response');\n        break;\n\n      default:\n        postMessage('Unknown command');\n    }\n  }, false);\n};\n","import WebWorker from '../../webWorkers/WebWorker';\nimport myworker from '../../webWorkers/testWorker';\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\n\nconst testWebWorker = (worker, setWorkerData) => () => {\n  setWorkerData('wating response');\n  worker.postMessage({ cmd: 'test', data: 'give me all your money' });\n};\n\nexport const Webworkers = () => {\n  // useRef хорош\n  const worker = useRef(new WebWorker(myworker));\n  const [workerData, setWorkerData] = useState('');\n\n  useEffect(\n    () => {\n      // выполнение при старте\n      worker.current.postMessage({ cmd: 'onload' });\n\n      // принятие всех ответов от воркера\n      worker.current.addEventListener('message', (event) => {\n        console.log(event.data);\n        setWorkerData(event.data);\n      });\n    },\n    true\n  );\n\n  const testWebWorkerError = useCallback(() => {\n    worker.current.postMessage({ cmd: 'error' });\n  });\n\n  return (\n    <>\n      <h3>смотри консоль</h3>\n      <button onClick={testWebWorker(worker.current, setWorkerData)}>web worker</button>{/** обращение через внешнюю функцию */}\n      <button onClick={() => {\n        const a = performance.now();\n        console.log('main thread started');\n        let res;\n        for (let i = 0; i < 20000000; i++) {\n          res += 1;\n          res += res % 2;\n        }\n        console.log('main thread ended: ', (performance.now() - a) / 1000);\n      }}>local func</button>{/** обращение через внешнюю функцию */}\n    </>\n  );\n};\n","// преобразование в структуру для state\nexport const toState = structure => Object.entries(structure).reduce((a, [key, data]) => {\n  a[key] = data.value;\n  return a;\n}, {});\n\n// принимает на вход только числа\nconst numberValidator = (data, value) => {\n  if (typeof value !== 'number') {\n    return ['Не числовое значение'];\n  }\n  \n  const errors = [];\n  \n  if (data.maxValue && value > data.maxValue) {\n    errors.push(`Максимальное значение: ${data.maxValue}`);\n  }\n  \n  if (data.minValue && value < data.minValue) {\n    errors.push(`Минимальное значение: ${data.minValue}`);\n  }\n  \n  return errors;\n};\n\nconst stringValidator = (data, value) => {\n  if (typeof value !== 'string') {\n    return ['Не строковое значение'];\n  }\n  \n  const errors = [];\n  const trimmedValue = value.trim();\n  \n  if (data.maxLength && trimmedValue.length > data.maxLength) {\n    errors.push(`Максимальная длина строки: ${data.maxLength}, сейчас ${trimmedValue.length}`);\n  }\n  \n  if (data.minLength && trimmedValue.length < data.minLength) {\n    errors.push(`Минимальная длина строки: ${data.minLength}, сейчас ${trimmedValue.length}`);\n  }\n  \n  return errors;\n};\n\n// parent - stringValidator\nconst emailValidator = (value) => {\n  if (typeof value !== 'string') {\n    return ['Не строковое значение'];\n  }\n  \n  const errors = [];\n  const trimmedValue = value.trim();\n  \n  const regExp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  if (!regExp.test(trimmedValue.toLowerCase())) {\n    errors.push('Невалидный email');\n  }\n  \n  return errors;\n};\n\n\nexport const validate = structure => (state) => {\n  // вида { key: [], ... }\n  const errors = Object.keys(state).reduce((a, s) => {\n    a[s] = [];\n    return a;\n  }, {});\n  \n  Object.entries(structure).forEach(([name, data]) => {\n    const value = state[name];\n    const pushErrors = e => errors[name].push(e);\n    \n    switch (data.type) {\n      case Number:\n        numberValidator(data, value).forEach(pushErrors);\n        break;\n      \n      case String:\n        stringValidator(data, value).forEach(pushErrors);\n        break;\n  \n      case 'email':\n        emailValidator(value).forEach(pushErrors);\n        break;\n        \n      default:\n        break;\n    }\n  });\n  \n  return errors;\n};\n\n/**\n * проверка, есть ли ошибки по данному полю\n * const hasError = checkHasError(errors);\n * hasError('name')\n *\n * @returns boolean\n */\nexport const checkHasError = errors => attr => errors[attr] && errors[attr].length > 0;\n\n/**\n * вывод кол-ва ошибок\n *\n * @returns number\n */\nexport const areErrors = errors => Object.values(errors).reduce((a, v) => a + v.length, 0);\n","// @flow\n\nimport React, { PureComponent } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport './styles.scss';\nimport Button from '@material-ui/core/Button';\nimport { areErrors, checkHasError, toState, validate } from '../../helpers/validator/formValidator';\nimport { CustomFormHelperText } from '../../helpers/CustomFormHelperText';\n\nconst block = 'form-component';\n\ntype Props = {}\n\ntype State = {\n  email: string,\n  name: string,\n  errors: {\n    email?: Array<string>,\n    name?: Array<string>,\n  },\n}\n\nexport class FormComponent extends PureComponent<Props, State> {\n  // начальная структура\n  stateStructure = {\n    email: {\n      type: 'email',\n      value: '',\n    },\n    name: {\n      type: String,\n      value: '',\n      maxLength: 20,\n      minLength: 1,\n    },\n  };\n  \n  // можно хранить ссылку на валидатор\n  validator = validate(this.stateStructure);\n  \n  // стейт как он есть\n  state = {\n    ...toState(this.stateStructure), // email: '', name: ''\n    errors: {},\n  };\n  \n  onChangeState = (attr: string) => ({ currentTarget: { value } }: SyntheticInputEvent<HTMLInputElement>) => {\n    this.setState({\n      ...this.state,\n      [attr]: value\n    }, this.onValidate);\n  };\n  \n  onSubmit = (e: SyntheticEvent<HTMLFormElement>): void => {\n    if (this.onValidate() === 0) {\n      console.log('form submited. state: ', this.state);\n    }\n    \n    e.preventDefault();\n  };\n  \n  onValidate = (): number => {\n    const errors = this.validator(this.state);\n    \n    this.setState({\n      errors,\n    });\n\n    return areErrors(errors);\n  };\n  \n  render() {\n    const { email, name, errors } = this.state;\n    const hasError = checkHasError(errors);\n    const FormHelperComponent = CustomFormHelperText(errors);\n    \n    return (\n      <Paper className={block}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Тест формы\n        </Typography>\n        <form onSubmit={this.onSubmit}>\n          <FormControl margin=\"normal\" required fullWidth error={hasError('name')}>\n            <InputLabel htmlFor=\"name\">Строка от 1 до 20</InputLabel>\n            <Input value={name} name=\"name\" autoComplete=\"off\" onChange={this.onChangeState('name')} />\n            <FormHelperComponent attr=\"name\" />\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth error={hasError('email')}>\n            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n            <Input value={email} name=\"email\" autoComplete=\"off\" onChange={this.onChangeState('email')} />\n            <FormHelperComponent attr=\"email\" />\n          </FormControl>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Подтвердить\n          </Button>\n        </form>\n      </Paper>\n    );\n  }\n}\n","import React, { useState, Suspense } from 'react';\nimport './App.scss';\nimport { Webworkers } from '../webworkers/Webworkers';\nimport { FormComponent } from '../MaterialUI/FormComponent';\nimport { SetInterval } from '../SetInterval/SetInterval';\nimport { RxjsComponent } from '../Rxjs/RxjsComponent';\n\nconst TestComponent = React.lazy(() => import('../Test/TestComponent'));\n\nexport const App = () => {\n  const [component, setComponent] = useState(\"empty\");\n  const [count, setCount] = useState(5);\n\n  return (\n    <div className=\"App\">\n      <Webworkers />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}