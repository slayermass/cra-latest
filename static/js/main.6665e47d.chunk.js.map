{"version":3,"sources":["webWorkers/WebWorker.js","webWorkers/testWorker.js","components/webworkers/Webworkers.js","helpers/validator/formValidator.js","components/MaterialUI/FormComponent.js","helpers/CustomFormHelperText.js","components/SetInterval/SetInterval.js","components/Rxjs/RxjsComponent.js","components/App/App.js","index.js"],"names":["WebWorker","workerUrl","Object","classCallCheck","this","code","toString","blob","Blob","concat","worker","Worker","URL","createObjectURL","addEventListener","onError","e","console","log","lineno","filename","message","testWorker","self","data","cmd","res","a","performance","now","i","postMessage","Error","testWebWorker","setWorkerData","Webworkers","useRef","myworker","_useState","useState","_useState2","slicedToArray","workerData","useEffect","current","event","testWebWorkerError","useCallback","react_default","createElement","Fragment","onClick","JSON","stringify","toState","structure","entries","reduce","_ref","_ref2","key","value","validate","state","errors","keys","s","forEach","_ref3","_ref4","name","pushErrors","push","type","Number","maxValue","minValue","numberValidator","String","trimmedValue","trim","maxLength","length","minLength","stringValidator","test","toLowerCase","emailValidator","checkHasError","attr","areErrors","values","v","FormComponent","_PureComponent","_getPrototypeOf2","_this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","stateStructure","email","validator","objectSpread","onChangeState","currentTarget","setState","defineProperty","onValidate","onSubmit","preventDefault","inherits","createClass","_this$state","hasError","FormHelperComponent","FormHelperText","CustomFormHelperText","Paper","className","Typography","component","variant","FormControl","margin","required","fullWidth","error","InputLabel","htmlFor","Input","autoComplete","onChange","Button","color","PureComponent","SetInterval","count","setCount","_useState3","_useState4","delay","setDelay","_useState5","_useState6","isRunning","setIsRunning","callback","savedCallback","id","setInterval","clearInterval","useInterval","target","RxjsComponent","subscription","observable$","Observable","observer","axios","get","then","response","next","complete","catch","merge","pipe","subscribe","unsubscribe","TestComponent","React","lazy","__webpack_require__","bind","ReactDOM","render","setComponent","RxjsComponent_RxjsComponent","prevComponent","prevCount","react","fallback","prop","Webworkers_Webworkers","FormComponent_FormComponent","SetInterval_SetInterval","document","getElementById"],"mappings":"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","file":"static/js/main.6665e47d.chunk.js","sourcesContent":["// класс обертка для веб воркеров в react\nexport default class WebWorker {\n  constructor(workerUrl) {\n    const code = workerUrl.toString();\n    const blob = new Blob([`(${code})()`]);\n    const worker = new Worker(URL.createObjectURL(blob));\n    worker.addEventListener('error', this.onError, false);\n    return worker;\n  }\n  \n  onError(e) {\n    console.log('Line: ' + e.lineno);\n    console.log('In: ' + e.filename);\n    console.log('Message: ' + e.message);\n  }\n}\n","export default () => {\n  // дождаться запроса\n  self.addEventListener('message', (e) => { // eslint-disable-line no-restricted-globals\n    if (!e) return;\n\n    switch (e.data.cmd) {\n      case 'test':\n        const a = performance.now();\n        console.log(1);\n        let res;\n        for (let i = 0; i < 20000000; i++) {\n          res += 1;\n          res += res % 2;\n        }\n        console.log(2, (performance.now() - a) / 1000);\n\n        postMessage({ data: 'money? noop' });\n        // esling-disable-line\n        postMessage({ data: 'money? noop' });\n        break;\n\n      case 'error':\n        postMessage({ data: 'response before error' });\n        throw new Error('EEERROROOR');\n\n      case 'onload':\n        postMessage('onload response');\n        break;\n\n      default:\n        postMessage('Unknown command');\n    }\n  }, false);\n};\n","import WebWorker from '../../webWorkers/WebWorker';\nimport myworker from '../../webWorkers/testWorker';\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\n\nconst testWebWorker = (worker, setWorkerData) => () => {\n  setWorkerData('wating response');\n  worker.postMessage({ cmd: 'test', data: 'give me all your money' });\n};\n\nexport const Webworkers = () => {\n  // useRef хорош\n  const worker = useRef(new WebWorker(myworker));\n  const [workerData, setWorkerData] = useState('');\n\n  useEffect(\n    () => {\n      // выполнение при старте\n      worker.current.postMessage({ cmd: 'onload' });\n\n      // принятие всех ответов от воркера\n      worker.current.addEventListener('message', (event) => {\n        console.log(event.data);\n        setWorkerData(event.data);\n      });\n    },\n    true\n  );\n\n  const testWebWorkerError = useCallback(() => {\n    worker.current.postMessage({ cmd: 'error' });\n  });\n\n  return (\n    <>\n      <button onClick={testWebWorker(worker.current, setWorkerData)}>web worker</button>{/** обращение через внешнюю функцию */}\n      <button onClick={() => {\n        const a = performance.now();\n        console.log(1);\n        let res;\n        for (let i = 0; i < 20000000; i++) {\n          res += 1;\n          res += res % 2;\n        }\n        console.log(2, (performance.now() - a) / 1000);\n      }}>local f</button>{/** обращение через внешнюю функцию */}\n      <button onClick={testWebWorkerError}>web worker error</button>{/** обращение через хук */}\n      <button onClick={() => worker.current.postMessage({ cmd: 'lul' })}>{/** обращение через анонимную функцию */}\n        unknown command\n      </button>\n      <p>\n        {JSON.stringify(workerData)}\n      </p>\n    </>\n  );\n};\n","// преобразование в структуру для state\nexport const toState = structure => Object.entries(structure).reduce((a, [key, data]) => {\n  a[key] = data.value;\n  return a;\n}, {});\n\n// принимает на вход только числа\nconst numberValidator = (data, value) => {\n  if (typeof value !== 'number') {\n    return ['Не числовое значение'];\n  }\n  \n  const errors = [];\n  \n  if (data.maxValue && value > data.maxValue) {\n    errors.push(`Максимальное значение: ${data.maxValue}`);\n  }\n  \n  if (data.minValue && value < data.minValue) {\n    errors.push(`Минимальное значение: ${data.minValue}`);\n  }\n  \n  return errors;\n};\n\nconst stringValidator = (data, value) => {\n  if (typeof value !== 'string') {\n    return ['Не строковое значение'];\n  }\n  \n  const errors = [];\n  const trimmedValue = value.trim();\n  \n  if (data.maxLength && trimmedValue.length > data.maxLength) {\n    errors.push(`Максимальная длина строки: ${data.maxLength}, сейчас ${trimmedValue.length}`);\n  }\n  \n  if (data.minLength && trimmedValue.length < data.minLength) {\n    errors.push(`Минимальная длина строки: ${data.minLength}, сейчас ${trimmedValue.length}`);\n  }\n  \n  return errors;\n};\n\n// parent - stringValidator\nconst emailValidator = (value) => {\n  if (typeof value !== 'string') {\n    return ['Не строковое значение'];\n  }\n  \n  const errors = [];\n  const trimmedValue = value.trim();\n  \n  const regExp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  if (!regExp.test(trimmedValue.toLowerCase())) {\n    errors.push('Невалидный email');\n  }\n  \n  return errors;\n};\n\n\nexport const validate = structure => (state) => {\n  // вида { key: [], ... }\n  const errors = Object.keys(state).reduce((a, s) => {\n    a[s] = [];\n    return a;\n  }, {});\n  \n  Object.entries(structure).forEach(([name, data]) => {\n    const value = state[name];\n    const pushErrors = e => errors[name].push(e);\n    \n    switch (data.type) {\n      case Number:\n        numberValidator(data, value).forEach(pushErrors);\n        break;\n      \n      case String:\n        stringValidator(data, value).forEach(pushErrors);\n        break;\n  \n      case 'email':\n        emailValidator(value).forEach(pushErrors);\n        break;\n        \n      default:\n        break;\n    }\n  });\n  \n  return errors;\n};\n\n/**\n * проверка, есть ли ошибки по данному полю\n * const hasError = checkHasError(errors);\n * hasError('name')\n *\n * @returns boolean\n */\nexport const checkHasError = errors => attr => errors[attr] && errors[attr].length > 0;\n\n/**\n * вывод кол-ва ошибок\n *\n * @returns number\n */\nexport const areErrors = errors => Object.values(errors).reduce((a, v) => a + v.length, 0);\n","// @flow\n\nimport React, { PureComponent } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport './styles.scss';\nimport Button from '@material-ui/core/Button';\nimport { areErrors, checkHasError, toState, validate } from '../../helpers/validator/formValidator';\nimport { CustomFormHelperText } from '../../helpers/CustomFormHelperText';\n\nconst block = 'form-component';\n\ntype Props = {}\n\ntype State = {\n  email: string,\n  name: string,\n  errors: {\n    email?: Array<string>,\n    name?: Array<string>,\n  },\n}\n\nexport class FormComponent extends PureComponent<Props, State> {\n  // начальная структура\n  stateStructure = {\n    email: {\n      type: 'email',\n      value: '',\n    },\n    name: {\n      type: String,\n      value: '',\n      maxLength: 20,\n      minLength: 1,\n    },\n  };\n  \n  // можно хранить ссылку на валидатор\n  validator = validate(this.stateStructure);\n  \n  // стейт как он есть\n  state = {\n    ...toState(this.stateStructure), // email: '', name: ''\n    errors: {},\n  };\n  \n  onChangeState = (attr: string) => ({ currentTarget: { value } }: SyntheticInputEvent<HTMLInputElement>) => {\n    this.setState({\n      ...this.state,\n      [attr]: value\n    }, this.onValidate);\n  };\n  \n  onSubmit = (e: SyntheticEvent<HTMLFormElement>): void => {\n    if (this.onValidate() === 0) {\n      console.log('form submited. state: ', this.state);\n    }\n    \n    e.preventDefault();\n  };\n  \n  onValidate = (): number => {\n    const errors = this.validator(this.state);\n    \n    this.setState({\n      errors,\n    });\n\n    return areErrors(errors);\n  };\n  \n  render() {\n    const { email, name, errors } = this.state;\n    const hasError = checkHasError(errors);\n    const FormHelperComponent = CustomFormHelperText(errors);\n    \n    return (\n      <Paper className={block}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Тест формы\n        </Typography>\n        <form onSubmit={this.onSubmit}>\n          <FormControl margin=\"normal\" required fullWidth error={hasError('name')}>\n            <InputLabel htmlFor=\"name\">Строка от 1 до 20</InputLabel>\n            <Input value={name} name=\"name\" autoComplete=\"off\" onChange={this.onChangeState('name')} />\n            <FormHelperComponent attr=\"name\" />\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth error={hasError('email')}>\n            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n            <Input value={email} name=\"email\" autoComplete=\"off\" onChange={this.onChangeState('email')} />\n            <FormHelperComponent attr=\"email\" />\n          </FormControl>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Подтвердить\n          </Button>\n        </form>\n      </Paper>\n    );\n  }\n}\n","import React from 'react';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { checkHasError } from './validator/formValidator';\n\nexport const CustomFormHelperText = errors => ({attr}) => {\n  return checkHasError(errors)(attr)\n    ? (\n      <FormHelperText>\n        {errors[attr]}\n      </FormHelperText>\n    )\n    : null;\n};\n\n","import React, { useEffect, useRef, useState } from \"react\";\n\n/**\n * использование хука useInterval вместо setInterval в хуках ( есть причины )\n */\nexport const SetInterval = () => {\n  const [count, setCount] = useState(0);\n  const [delay, setDelay] = useState(1000);\n  const [isRunning, setIsRunning] = useState(true);\n  \n  useInterval(() => {\n    setCount(count + 1);\n  }, isRunning ? delay : null);\n  \n  function handleDelayChange(e) {\n    setDelay(Number(e.target.value));\n  }\n  \n  function stopInterval() {\n    setIsRunning(!isRunning);\n  }\n  \n  return (\n    <>\n      <h1>{count}</h1>\n      <input value={delay} onChange={handleDelayChange} />\n      <button onClick={stopInterval}>\n        {isRunning ? 'stop' : 'resume'}\n      </button>\n    </>\n  );\n};\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n  \n  // Remember the latest function.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  \n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\n","import React, { useRef } from 'react';\nimport { Observable, merge } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport axios from 'axios';\n\nexport const RxjsComponent = () => {\n  let subscription = useRef();\n\n  const onClick = () => {\n    console.log('start ajax');\n    let observable$ = new Observable( ( observer ) => {\n      axios.get( 'https://jsonplaceholder.typicode.com/users' )\n        .then( ( response ) => {\n          observer.next( response.data );\n          observer.complete();\n        } )\n        .catch( ( error ) => {\n          observer.error( error );\n        } );\n    } );\n    const a = merge(\n      observable$.pipe(delay(1000)),\n    );\n\n    subscription = a.subscribe( {\n      next: data => console.log( '[data] => ', data ),\n      complete: data => console.log( '[complete]', data),\n    } );\n  };\n\n  const onCancel = () => {\n    console.log('cancel ajax');\n    subscription.unsubscribe();\n  };\n\n  return (\n    <>\n      <button onClick={onClick}>do ajax</button>\n      <button onClick={onCancel}>cancel ajax</button>\n    </>\n  );\n};\n","import React, { useState, Suspense } from 'react';\nimport './App.scss';\nimport { Webworkers } from '../webworkers/Webworkers';\nimport { FormComponent } from '../MaterialUI/FormComponent';\nimport { SetInterval } from '../SetInterval/SetInterval';\nimport { RxjsComponent } from '../Rxjs/RxjsComponent';\n\nconst TestComponent = React.lazy(() => import('../Test/TestComponent'));\n\nexport const App = () => {\n  const [component, setComponent] = useState(\"empty\");\n  const [count, setCount] = useState(5);\n\n  return (\n    <div className=\"App\">\n      <RxjsComponent />\n      <hr />\n      <button\n        onClick={() =>\n          setComponent(prevComponent =>\n            prevComponent === \"test\" ? \"empty\" : \"test\"\n          )\n        }\n      >\n        change component\n      </button>\n      <button onClick={() => setCount(prevCount => prevCount + 1)}>+++</button>\n      <Suspense fallback={<div>Loading...</div>}>\n        {component === \"test\" && <TestComponent prop={\"test\"} count={count} />}\n      </Suspense>\n      <hr />\n      <div>\n        <Webworkers />\n      </div>\n      <FormComponent />\n      <hr/>\n      <SetInterval />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}